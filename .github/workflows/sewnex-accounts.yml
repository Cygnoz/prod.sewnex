name: Deploy to Ubuntu Server - Accounts

on:
  push:
    branches:
      - Accounts

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to Server
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF_SSH'
            set -e  # Stop execution if any command fails
            
            echo "üöÄ Navigating to project directory..."
            cd ~/dev.sewnex
            git checkout Accounts
            git pull

            echo "üõë Removing old container if it exists..."
            if docker ps -a --format '{{.Names}}' | grep -q "^dev-sewnex-accounts$"; then
              docker rm -f dev-sewnex-accounts
            fi

            echo "üßπ Cleaning up old Docker images..."
            docker image prune -f

            echo "üìÑ Creating Dockerfile..."
            cat <<EOF > Dockerfile
            FROM node:22.11.0
            WORKDIR /usr/src/app

            # Copy package files first (better caching)
            COPY package.json package-lock.json ./
            RUN ls -l /usr/src/app  # Debugging step to check files
            RUN npm install

            # Copy rest of the application files
            COPY . .
            EXPOSE 4001
            CMD ["node", "server.js"]
            EOF

            echo "üê≥ Building Docker container..."
            docker build -t dev-sewnex-accounts .

            echo "üöÄ Running the container..."
            docker run -d --name dev-sewnex-accounts -p 7001:4001 dev-sewnex-accounts

            echo "üßπ Cleaning up temporary files..."
            rm Dockerfile

            echo "‚úÖ Deployment completed successfully!"
          EOF_SSH
